name: Build for MacOS

on:
  workflow_call:
    inputs:
      version:
        required: false
        type: string

jobs:
  macos-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: target
        run: echo "target=${{ matrix.arch }}-apple-darwin" >> $GITHUB_OUTPUT

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/osxcross
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./target/
          key: ${{ steps.target.outputs.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ steps.target.outputs.target }}-

      - name: Setup rust
        run: |
          rustup install nightly
          rustup default nightly
          rustup target add ${{ steps.target.outputs.target }}

      - name: Setup cross compiler
        run: |
          sudo apt-get update -qq; \
          sudo apt-get install -qq --no-install-recommends \
            curl \
            ca-certificates \
            clang \
            cmake \
            make \
            git \
            patch \
            python-is-python3 \
            libssl-dev \
            lzma-dev \
            libxml2-dev \
            xz-utils \
            bzip2 \
            cpio \
            zlib1g-dev

      - name: Check osxcross cache
        id: osxcross
        continue-on-error: true
        run: |
          mkdir -p ~/osxcross
          cd ~/osxcross
          git fetch
          echo "status=$?" >> $GITHUB_OUTPUT

      - name: Download osxcross
        if: ${{ steps.osxcross.outputs.status != 0 }}
        run: git clone https://github.com/tpoechtrager/osxcross.git .

      - name: Build osxcross
        continue-on-error: true
        run: |
          cd ~/osxcross
          if [ $(git diff origin/master | wc -l) -ne 0 ]; then
            git clone https://github.com/tpoechtrager/osxcross.git .
            curl -fOL --output-dir ~/osxcross/tarballs/ ${{ vars.MACOS_SDK_URL }}
            UNATTENDED=1 ./build.sh
          fi
          sudo cp -r ~/osxcross/target/* /usr/local/
          sudo ldconfig

      - name: Move config
        run: |
          mkdir -p .cargo
          cp .devcontainer/cargo-config.toml .cargo/config.toml

      - name: Build
        run: |
          cargo build --release --target ${{ steps.target.outputs.target }}
          
      - id: date
        env: 
          TZ: "Asia/Tokyo"
        run: echo "date=unstable-$(date -u +'%Y%m%d')" >> $GITHUB_OUTPUT
  
      - name: tar archive
        id: tar
        run: |
          FILENAME=snails-machine-${{ inputs.version || steps.date.outputs.date }}-${{ steps.target.outputs.target }}.tar.gz
          tar czf ${FILENAME} -C target/${{ steps.target.outputs.target }}/release snails-machine
          echo "filename=${FILENAME}" >> $GITHUB_OUTPUT

      - name: Save artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.version || steps.date.outputs.date }}-${{ steps.target.outputs.target }}
          path: ./${{ steps.tar.outputs.filename }}
